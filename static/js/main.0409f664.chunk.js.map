{"version":3,"sources":["Components/CardView/Card.jsx","Components/CardView/DetailedCard.jsx","Components/CardView/DetailView.jsx","Components/CardView/CardView.jsx","Components/Controls/Controls.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","_useState","useState","_useState2","Object","slicedToArray","hover","setHover","animDelay","concat","Math","random","anim","useSpring","transform","from","react_default","a","createElement","Fragment","web","div","onClick","onMouseEnter","onMouseOver","onMouseLeave","style","objectSpread","backgroundImage","imageUrl","animationDelay","--animDelay","className","DetailedCard","running","setRunning","fadeInRef","useRef","floatRef","fadeIn","opacity","ref","float","to","config","duration","reset","reverse","onRest","console","log","useChain","background","stringReplace","require","CardText","text","parsed","match","index","replace","DetailView","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","parseManaCost","input","split","map","elem","isNaN","key","state","show","card","nextProps","setState","_this2","closeAction","CardView_DetailedCard","renderprops","name","manaCost","rarity","type","toughness","power","DetailView_CardText","flavor","Component","CardView","prevPage","page","prevstate","nextPage","showCardInfo","selected","showInfo","closeCardInfo","cardHover","filters","cards","searchInput","toLowerCase","length","every","value","CardView_DetailView","leftArrowStyle","toConsumableArray","Array","CardView_Card","hopscotch","Controls","onChange","inputHandler","placeholder","pretty_checkbox_react_umd_min","color","shape","animation","e","filterHandler","blueFilter","target","checked","redFilter","whiteFilter","blackFilter","greenFilter","id","endTour","document","querySelector","classList","contains","remove","add","mtg","App","searchTimeout","setTimeout","currentBuffer","currentPageCards","prevBuffer","prevPageCards","currentPage","prevState","nextPageCards","getPrevPageCards","nextBuffer","getNextPageCards","where","colorIdentity","filter","Boolean","join","trim","pageSize","then","searchInputHandler","updateFiltered","stateObject","getBaseSet","clearTimeout","setCookie","expiry","Date","setTime","getTime","cookie","toUTCString","getCookie","keyValue","intro","steps","title","content","placement","arrowOffset","xOffset","onEnd","onClose","filtered","startTour","Components_Controls_Controls","colorlessFilter","Components_CardView_CardView","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0409f664.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./CardView.scss\";\nimport { animated, useSpring, interpolate } from \"react-spring\";\n\nconst Card = props => {\n  const [hover, setHover] = useState(false);\n\n  let animDelay = `${Math.random() * 5}s`;\n  const anim = useSpring(\n    hover\n      ? {\n          transform: \"scale(1.1)\",\n          from: {\n            transform: \"scale(1)\"\n          }\n        }\n      : {\n          transform: \"scale(1)\",\n          from: {\n            transform: \"scale(1.1)\"\n          }\n        }\n  );\n\n  return (\n    <>\n      <animated.div\n        onClick={props.onClick}\n        onMouseEnter={() => setHover(true)}\n        onMouseOver={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        style={{\n          backgroundImage: `url(${props.imageUrl})`,\n          animationDelay: animDelay,\n          \"--animDelay\": animDelay,\n          ...anim\n        }}\n        className=\"card\"\n      >\n        {/* <div\n          className=\"glow\"\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        /> */}\n      </animated.div>\n    </>\n  );\n};\n\nexport default Card;\n","import React, {useRef, useState} from 'react';\nimport {useChain, useSpring, animated} from 'react-spring';\n\nconst DetailedCard = props => {\n    const [running, setRunning] = useState(true);\n    const fadeInRef = useRef();\n    const floatRef = useRef();\n    const fadeIn = useSpring({\n        opacity: 1,\n        transform: 'translate(0px, 0px)',\n        from: {\n            opacity: 0,\n            transform: 'translate(0px, -30px)'\n        },\n        ref: fadeInRef\n    })\n    const float = useSpring({\n        to: {\n            transform: 'translate(0px, -10px)',\n  \n        },\n        from: {\n            transform: 'translate(0px, 0px)'\n        },\n        config: {duration: 1000},\n        reset: !running,\n        reverse: !running,\n        onRest: () => setRunning(!running),\n        ref: floatRef\n    })\n    console.log(running)\n    useChain([fadeInRef, floatRef])\n    return(\n            <animated.div  className=\"detail__card\" style={{ background: `url(${props.imageUrl}`, ...fadeIn, ...float}}>\n            </animated.div>\n        \n    )\n}\n\nexport default DetailedCard;","import React, { Component } from \"react\";\nimport {Spring} from 'react-spring/renderprops';\nimport DetailedCard from './DetailedCard'\n\nconst stringReplace = require('react-string-replace');\n\nconst CardText = (props) => {\n\n  if (typeof props.text == 'undefined') return null;\n  let parsed = stringReplace(props.text, '\\n', (match, index) => <br />);\n\n  parsed = stringReplace(parsed, '{T}', () => <div className=\"icon icon__tap\" />);\n  parsed = stringReplace(parsed, '{W}', () => <div className=\"whiteMana mana\" />);\n  parsed = stringReplace(parsed, '{B}', () => <div className=\"blackMana mana\" />);\n  parsed = stringReplace(parsed, '{R}', () => <div className=\"redMana mana\" />);\n  parsed = stringReplace(parsed, '{G}', () => <div className=\"greenMana mana\" />);\n  parsed = stringReplace(parsed, '{U}', () => <div className=\"blueMana mana\" />);\n  parsed = stringReplace(parsed, '{C}', () => <div className=\"colorlessMana mana\">1</div>);\n  parsed = stringReplace(parsed, '{X}', () => <div className=\"colorlessMana mana\">X</div>);\n  parsed = stringReplace(parsed, /({\\d})/g, (match) => <div className=\"colorlessMana mana\">{match.replace(/\\W/g, \"\")}</div>);\n  \n  return(\n    <div>\n      {parsed}\n    </div>\n  )\n}\n\nclass DetailView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      card: props.card\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      show: nextProps.show,\n      card: nextProps.card\n    });\n  }\n\n  parseManaCost = input => {\n    if (typeof input != \"undefined\")\n      return input\n        .replace(/\\W/g, \"\")\n        .split(\"\")\n        .map((elem, index) => {\n          if (!isNaN(elem))\n            return <div key={index} className={\"colorlessMana mana\"}>{elem}</div>;\n          switch (elem) {\n            case \"G\":\n              return <div key={index} className={\"greenMana mana\"} />;\n            case \"R\":\n              return <div key={index} className={\"redMana mana\"} />;\n            case \"U\":\n              return <div key={index} className={\"blueMana mana\"} />;\n            case \"W\":\n              return <div key={index} className={\"whiteMana mana\"} />;\n            case \"B\":\n              return <div key={index} className={\"blackMana mana\"} />;\n              default:\n              return;\n          }\n        });\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"curtain\" onClick={this.props.closeAction}>\n        <div className=\"detail__container\">\n          <DetailedCard\n              imageUrl={this.state.card.imageUrl}\n            />\n          <Spring\n            from={{\n              opacity: 0,\n              transform: 'translate(0px, 30px)'\n            }}\n            to={{\n              opacity: 1,\n              transform: 'translate(0px, 0px)'\n            }}\n          >\n            {props => <div style={{...props}} className=\"detail__text\">\n              <h1 className=\"detail__text__header\">\n                {this.state.card.name}{\" \"}\n                <div className=\"detail__text__header__mana\">\n                  {this.parseManaCost(this.state.card.manaCost)}\n                </div>\n              </h1>\n              <h2>\n                {this.state.card.rarity} {this.state.card.type}\n              </h2>\n              {this.state.card.toughness == null ? null : <p>\n                {this.state.card.power}/{this.state.card.toughness}\n              </p>}\n              <div className=\"detail__text__text\">\n                <CardText text={this.state.card.text} />\n              </div>\n              <p className=\"detail__text__flavorText\">\n                {this.state.card.flavor}\n              </p>\n            </div>}\n          </Spring>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DetailView;\n","import React, { Component } from \"react\";\nimport \"./CardView.scss\";\nimport Card from \"./Card\";\nimport DetailView from \"./DetailView\";\n\n\n\nclass CardView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      filters: props.filters,\n      cards: [],\n      selected: {},\n      showInfo: false,\n      searchInput: props.searchInput\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.state.searchInput.toLowerCase() !=\n        nextProps.searchInput.toLowerCase() ||\n      !(\n        this.state.filters.length === nextProps.filters.length &&\n        this.state.filters.every(\n          (value, index) => value === nextProps.filters[index]\n        )\n      )\n    )\n      this.setState({ page: 0 });\n    this.setState({ cards: nextProps.cards, filters: nextProps.filters });\n  }\n\n  prevPage = () => {\n    if (this.state.page > 0) {\n      this.setState(prevstate => ({ page: prevstate.page - 8 }));\n    }\n  };\n  nextPage = () => {\n    this.setState(prevstate => ({ page: prevstate.page + 8 }));\n  };\n\n  showCardInfo = card => {\n    if (typeof card == \"undefined\") return;\n    this.setState({ selected: card, showInfo: true });\n  };\n\n  closeCardInfo = () => {\n    this.setState({\n      showInfo: false\n    });\n  };\n\n  cardHover = () => {\n    console.log('hovered')\n  }\n\n  render() {\n    return (\n      <div className=\"cardTable\">\n        {this.state.showInfo === true ? (\n          <DetailView\n            closeAction={this.closeCardInfo}\n            card={this.state.selected}\n          />\n        ) : null}\n        <div className=\"leftArrow__placeholder\">\n          {this.props.prevPage != null ? (\n            <div className=\"arrowWrapper\">\n              <div\n                className=\"leftArrow\"\n                style={this.leftArrowStyle}\n                onClick={this.props.prevPage}\n              />\n            </div>\n          ) : null}\n        </div>\n        <div className=\"cards\">\n          {[...Array(this.state.cards.length)].map((elem, index) => (\n            <Card\n              key={index}\n              onClick={() =>\n                this.showCardInfo(this.state.cards[this.state.page + index])\n              }\n              imageUrl={\n                typeof this.state.cards[this.state.page + index] == \"undefined\"\n                  ? null\n                  : this.state.cards[this.state.page + index].imageUrl\n              }\n            />\n          ))}\n        </div>\n        <div className=\"rightArrow__placeholder\">\n          {this.props.nextPage != null ? (\n            <div\n              className=\"rightArrow\"\n              style={this.leftArrowStyle}\n              onClick={this.props.nextPage}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardView;\n","import React from \"react\";\nimport \"../reset.scss\";\nimport \"./Controls.scss\";\nimport 'pretty-checkbox';\nimport { Checkbox } from 'pretty-checkbox-react';\n\nconst hopscotch = require('hopscotch');\n\n\n\nconst Controls = (props) => {\n  return (\n    <div className=\"controls__main\">\n      <div className=\"controls__container\">\n        <h1 className=\"title\"><span className=\"logo\">MTG</span> <span className=\"subtitle\">Card Search</span></h1>\n\n        <div className=\"controls__controls\">\n          <div className=\"controls__controls__searchInput\">\n          <div className=\"inputWrapper\">\n            \n                  <input className=\"controls__controls__searchInput__input\" onChange={props.inputHandler} value={props.searchInput} type=\"text\" placeholder=\"Enter card name...\" />\n                  <span className=\"input__focusBorder\">\n                  <i></i>\n                  </span>\n          </div>\n          </div>\n\n          <div className=\"controls__filters\">\n              <Checkbox color=\"warning\" shape=\"round\" animation=\"smooth\" style=\"thick\" onChange={(e) => props.filterHandler({ blueFilter: e.target.checked })} type=\"checkbox\">Blue</Checkbox>\n              <Checkbox color=\"warning\" shape=\"round\" animation=\"smooth\" style=\"thick\" onChange={(e) => props.filterHandler({ redFilter: e.target.checked })} type=\"checkbox\">Red</Checkbox>\n              <Checkbox color=\"warning\" shape=\"round\" animation=\"smooth\" style=\"thick\" onChange={(e) => props.filterHandler({ whiteFilter: e.target.checked })} type=\"checkbox\">White</Checkbox>\n              <Checkbox color=\"warning\" shape=\"round\" animation=\"smooth\" style=\"thick\" onChange={(e) => props.filterHandler({ blackFilter: e.target.checked })} type=\"checkbox\">Black</Checkbox>\n              <Checkbox color=\"warning\" shape=\"round\" animation=\"smooth\" style=\"thick\" onChange={(e) => props.filterHandler({ greenFilter: e.target.checked })} type=\"checkbox\">Green</Checkbox>\n\n          </div>\n        </div>\n      </div>\n      <div className=\"controls__hide__pip\" id=\"controls__hide__pip\" onClick={() => {\n        hopscotch.endTour();\n        if (document.querySelector('.controls__main').classList.contains(\"active\")) {\n          document.querySelector('.controls__main').classList.remove('active')\n        } else {\n          document.querySelector('.controls__main').classList.add('active')\n        }\n      }}></div>\n    </div>\n  );\n}\n\n\nexport default Controls;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport CardView from \"./Components/CardView/CardView\";\nimport Controls from \"./Components/Controls/Controls\";\nimport '../node_modules/hopscotch/dist/css/hopscotch.min.css'\n\n\nconst hopscotch = require('hopscotch');\nconst mtg = require(\"mtgsdk\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      currentPageCards: [],\n      prevPageCards: [],\n      nextPageCards: [],\n      searchInput: \"\",\n      redFilter: false,\n      blueFilter: false,\n      blackFilter: false,\n      greenFilter: false,\n      whiteFilter: false,\n      filtered: []\n    };\n  }\n\n  searchTimeout = setTimeout(() => {}, 0);\n\n  prevPage = () => {\n    let currentBuffer = this.state.currentPageCards;\n    let prevBuffer = this.state.prevPageCards;\n    if (this.state.currentPage > 1) {\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage - 1,\n        nextPageCards: currentBuffer,\n        currentPageCards: prevBuffer,\n        prevPageCards: []\n      }), () => {if (this.state.currentPage > 1) this.getPrevPageCards()})\n    }\n  }\n\n  nextPage = () => {\n    let currentBuffer = this.state.currentPageCards;\n    let nextBuffer = this.state.nextPageCards;\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage + 1,\n        prevPageCards: currentBuffer,\n        currentPageCards: nextBuffer,\n        nextPageCards: []\n      }), () => this.getNextPageCards())\n  }\n\n  getPrevPageCards = () => {\n    mtg.card.where( {colorIdentity: `${[\n      this.state.redFilter ? \"R\" : null,\n      this.state.blueFilter ? \"U\" : null,\n      this.state.whiteFilter ? \"W\" : null,\n      this.state.blackFilter ? \"B\" : null,\n      this.state.greenFilter ? \"G\" : null\n    ]\n      .filter(Boolean)\n      .join(\",\")}`,name: this.state.searchInput.trim().length > 0\n      ? this.state.searchInput\n      : \"\",pageSize: 8, page: this.state.currentPage - 1, contains: 'imageUrl,multiverseId'} )\n    .then(cards => {\n      this.setState({\n        prevPageCards: cards\n      })\n    })\n  }\n\n  getNextPageCards = () => {\n    this.setState({nextPageCards: []}, () => {\n      mtg.card.where( {colorIdentity: `${[\n        this.state.redFilter ? \"R\" : null,\n        this.state.blueFilter ? \"U\" : null,\n        this.state.whiteFilter ? \"W\" : null,\n        this.state.blackFilter ? \"B\" : null,\n        this.state.greenFilter ? \"G\" : null\n      ]\n        .filter(Boolean)\n        .join(\",\")}`,name: this.state.searchInput.trim().length > 0\n        ? this.state.searchInput\n        : \"\",pageSize: 8, page: this.state.currentPage + 1, contains: 'imageUrl,multiverseId'} )\n      .then(cards => {\n        this.setState({\n          nextPageCards: cards\n        })\n      })\n    })\n    \n  }\n\n  searchInputHandler = e => {\n    this.setState(\n      {\n        searchInput: e.target.value\n      },\n      () => this.updateFiltered()\n    );\n  };\n\n  filterHandler = stateObject => {\n    this.setState(stateObject, () => this.updateFiltered());\n  };\n\n  getBaseSet = () => {\n    mtg.card\n      .where({ pageSize: 8, page: 1, contains: 'imageUrl,multiverseId' })\n      .then(cards => {\n        this.setState({\n          currentPageCards: cards\n        });\n      });\n  };\n\n  updateFiltered = () => {\n    clearTimeout(this.searchTimeout);\n    this.searchTimeout = setTimeout(() => {\n      mtg.card.where({\n        colorIdentity: `${[\n          this.state.redFilter ? \"R\" : null,\n          this.state.blueFilter ? \"U\" : null,\n          this.state.whiteFilter ? \"W\" : null,\n          this.state.blackFilter ? \"B\" : null,\n          this.state.greenFilter ? \"G\" : null\n        ]\n          .filter(Boolean)\n          .join(\",\")}`,\n        name: this.state.searchInput.trim().length > 0\n        ? this.state.searchInput\n        : \"\",\n        pageSize: 8,\n        page: 1,\n        contains: 'imageUrl,multiverseId'\n      }).then(cards => {\n        this.setState({\n          currentPage: 1,\n          prevPageCards: [],\n          currentPageCards: cards,\n          nextPageCards: []\n        }, () => this.getNextPageCards())\n      })\n    },300)\n  }\n\n  componentWillMount() {\n    this.getBaseSet();\n    this.getNextPageCards();\n  }\n\n  setCookie = (key, value) => {\n    let expiry = new Date();\n    expiry.setTime(expiry.getTime() + (1 * 24 * 60 * 60 * 1000));\n    document.cookie = `${key} = ${value}; path=/;expires=${expiry.toUTCString()}`;\n  }\n\n  getCookie = (key) => {\n    let keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');\n    return keyValue ? keyValue[2] : null;\n  }\n\n  intro = {\n    id: \"intro\",\n    steps: [\n      {\n        title: \"Welcome\",\n        content: \"Click here to open the search menu\",\n        target: \"controls__hide__pip\",\n        placement: \"bottom\",\n        arrowOffset: \"center\",\n        xOffset: \"center\"\n      }\n    ],\n    onEnd: () => this.setCookie('seenIntro', 'seen'),\n    onClose: () => this.setCookie('seenIntro', 'seen')\n  }\n\n  componentDidMount() {\n    if (!this.getCookie('seenIntro')) {\n      hopscotch.startTour(this.intro);\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Controls\n          inputHandler={this.searchInputHandler}\n          filterHandler={this.filterHandler}\n          searchInput={this.state.searchInput}\n          redFilter={this.state.redFilter}\n          blueFilter={this.state.blueFilter}\n          blackFilter={this.state.blackFilter}\n          whiteFilter={this.state.whiteFilter}\n          greenFilter={this.state.greenFilter}\n          colorlessFilter={this.state.colorlessFilter}\n        />\n        <CardView\n          filters={[\n            this.state.redFilter,\n            this.state.blueFilter,\n            this.state.whiteFilter,\n            this.state.blackFilter,\n            this.state.greenFilter,\n            this.state.colorlessFilter\n          ]}\n          cards={this.state.currentPageCards}\n          searchInput={this.state.searchInput}\n          nextPage = {this.state.nextPageCards.length>0?this.nextPage:null}\n          prevPage = {this.state.prevPageCards.length>0?this.prevPage:null}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}